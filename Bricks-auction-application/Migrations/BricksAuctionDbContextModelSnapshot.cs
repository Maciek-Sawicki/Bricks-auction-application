// <auto-generated />
using System;
using Bricks_auction_application.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bricks_auction_application.Migrations
{
    [DbContext(typeof(BricksAuctionDbContext))]
    partial class BricksAuctionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bricks_auction_application.Models.Items.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("SetId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Offers.Offer", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("LEGOSetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OfferEndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OfferId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LEGOSetId");

                    b.HasIndex("UserId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Sets.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.Cart", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SetId")
                        .HasColumnType("int");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartId");

                    b.HasIndex("SetId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.OrderedCart", b =>
                {
                    b.Property<int>("OrderedCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderedCartId"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrdersHistoryOrderId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderedCartId");

                    b.HasIndex("OrdersHistoryOrderId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderedCarts");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.OrderedCartItem", b =>
                {
                    b.Property<int>("OrderedCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderedCartItemId"));

                    b.Property<int>("OrderedCartId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SetId")
                        .HasColumnType("int");

                    b.HasKey("OrderedCartItemId");

                    b.HasIndex("OrderedCartId");

                    b.HasIndex("SetId");

                    b.ToTable("OrderedCartItems");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.OrdersHistory", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("OrdersHistories");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Offers.Offer", b =>
                {
                    b.HasOne("Bricks_auction_application.Models.Sets.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bricks_auction_application.Models.Items.Set", "LEGOSet")
                        .WithMany()
                        .HasForeignKey("LEGOSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bricks_auction_application.Models.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("LEGOSet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.Cart", b =>
                {
                    b.HasOne("Bricks_auction_application.Models.Users.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("Bricks_auction_application.Models.Users.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.CartItem", b =>
                {
                    b.HasOne("Bricks_auction_application.Models.Users.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bricks_auction_application.Models.Items.Set", "Set")
                        .WithMany()
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.OrderedCart", b =>
                {
                    b.HasOne("Bricks_auction_application.Models.Users.OrdersHistory", null)
                        .WithMany("OrderedCarts")
                        .HasForeignKey("OrdersHistoryOrderId");

                    b.HasOne("Bricks_auction_application.Models.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.OrderedCartItem", b =>
                {
                    b.HasOne("Bricks_auction_application.Models.Users.OrderedCart", "OrderedCart")
                        .WithMany("Items")
                        .HasForeignKey("OrderedCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bricks_auction_application.Models.Items.Set", "Set")
                        .WithMany()
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderedCart");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.OrdersHistory", b =>
                {
                    b.HasOne("Bricks_auction_application.Models.Users.User", "User")
                        .WithMany("OrdersHistory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.OrderedCart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.OrdersHistory", b =>
                {
                    b.Navigation("OrderedCarts");
                });

            modelBuilder.Entity("Bricks_auction_application.Models.Users.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("OrdersHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
