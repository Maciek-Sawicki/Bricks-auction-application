@model IEnumerable<Bricks_auction_application.Models.Users.CartItem>

@{
    ViewData["Title"] = "Twój koszyk";
    decimal totalCartValue = 0; // Zmienna do przechowywania sumy wszystkich przedmiotów w koszyku
    decimal totalCartValueWithShipping = 0; // Zmienna do przechowywania sumy wszystkich przedmiotów z wysyłką
}

<h1 class="mb-5">Twój koszyk</h1>

<table class="table">
    <thead>
        <tr>
            <th>Zdjęcie</th>
            <th>@Html.DisplayNameFor(model => model.First().Offer.LEGOSet.Name)</th>
            <th>@Html.DisplayNameFor(model => model.First().Offer.LEGOSet.SetId)</th>
            <th>@Html.DisplayNameFor(model => model.First().Offer.Price)</th>
            <th>@Html.DisplayNameFor(model => model.First().Offer.ShippingPrice)</th>
            <th>@Html.DisplayNameFor(model => model.First().Offer.OfferEndDateTime)</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var group in Model.GroupBy(item => item.Offer.User.Email))
        {
            // Obliczanie sumy dla aktualnej grupy
            decimal groupTotal = group.Sum(item => item.Offer.Price);
            totalCartValue += groupTotal; // Dodanie sumy grupy do całkowitej sumy koszyka

            // Obliczanie najdroższej ceny wysyłki w grupie
            decimal maxShippingPrice = group.Max(item => item.Offer.ShippingPrice);
            decimal groupTotalWithShipping = groupTotal + maxShippingPrice; // Suma grupy + najdroższa wysyłka
            totalCartValueWithShipping += groupTotalWithShipping; // Dodanie sumy grupy z wysyłką do całkowitej wartości koszyka z wysyłką

            <tr>
                <td colspan="8" class="table-active align-content-xxl-between">
                    <strong>Sprzedający: @group.Key</strong>
                    <span> - Łączna wartość: @groupTotal.ToString("C")</span>
                    <span> - Łączna wartość z wysyłką: @groupTotalWithShipping.ToString("C")</span>
                </td>
            </tr>

            @foreach (var item in group)
            {
                <tr>
                    <td>
                        <img src="~/@item.Offer.ImagePath" class="img-fluid" style="max-height: 100px;" />
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Offer.LEGOSet.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Offer.LEGOSet.SetId)</td>
                    <td>@Html.DisplayFor(modelItem => item.Offer.Price)</td>
                    <td>@Html.DisplayFor(modelItem => item.Offer.ShippingPrice)</td>
                    <td>@Html.DisplayFor(modelItem => item.Offer.OfferEndDateTime)</td>
                    <td>
                        @Html.ActionLink("Zobacz aukcję", "Details", "Offers", new { id = item.Offer.OfferId }, null) |
                        @Html.ActionLink("Usuń", "Delete", new { id = item.CartItemId })


                    </td>
                </tr>
            }



        }
    </tbody>
</table>

<div class="mt-4 text-end">
    <h4>Całkowita wartość koszyka: @totalCartValue.ToString("C")</h4>
    <h4>Całkowita wartość koszyka z wysyłką: @totalCartValueWithShipping.ToString("C")</h4>
</div>
<div class="text-end mt-4">
    <a href="@Url.Action("Index", "OrdersSummary", new { area = "Customer" })" class="btn btn-outline-dark">Przejdź do zamówienia</a>
</div>
