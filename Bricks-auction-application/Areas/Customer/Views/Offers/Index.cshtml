@model IEnumerable<Bricks_auction_application.Models.Offers.Offer>

@{
    ViewData["Title"] = "Offers";
    var currentSortOrder = ViewData["CurrentSortOrder"] != null ? ViewData["CurrentSortOrder"].ToString() : "Name_desc";
    var currentSortDirection = ViewData["CurrentSortDirection"] != null ? ViewData["CurrentSortDirection"].ToString() : "ascending";
    var searchString = ViewData["CurrentCategoryId"] as string;
}

<partial name="_Notification" />

<div class="row">
    <h2 class="d-inline align-middle mt-3 mb-3 col-md-6">Przeglądaj Oferty!</h2>
    <div class="form-group mb-2 d-inline ml-auto col-md-6 text-end align-content-center">
        <a href="@Url.Action("Create", "Offers", new { area = "Customer" })" class="btn btn-outline-dark">Dodaj nową ofertę</a>
    </div>
</div>

<form asp-action="Index" method="get" id="filterForm" class="form-inline">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group mb-2">
                <label for="minPrice" class="mr-2">Cena minimalna:</label>
                <input type="number" name="minPrice" class="form-control mr-3" id="minPrice" value="@ViewData["CurrentMinPrice"]" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-2">
                <label for="maxPrice" class="mr-2">Cena maksymalna:</label>
                <input type="number" name="maxPrice" class="form-control mr-3" id="maxPrice" value="@ViewData["CurrentMaxPrice"]" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group mb-2">
                <label for="minPieces" class="mr-2">Ilość elementów od:</label>
                <input type="number" name="minPieces" class="form-control mr-3" id="minPieces" value="@ViewData["CurrentMinPieces"]" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-2">
                <label for="maxPieces" class="mr-2">Ilość elementów do:</label>
                <input type="number" name="maxPieces" class="form-control mr-3" id="maxPieces" value="@ViewData["CurrentMaxPieces"]" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group mb-2">
                <label for="minYear" class="mr-2">Rok produkcji od:</label>
                <input type="number" name="minYear" class="form-control mr-3" id="minYear" value="@ViewData["CurrentMinYear"]" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-2">
                <label for="maxYear" class="mr-2">Rok produkcji do:</label>
                <input type="number" name="maxYear" class="form-control mr-3" id="maxYear" value="@ViewData["CurrentMaxYear"]" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="form-group mb-2">
                <label for="categoryId" class="mr-2">Kategoria:</label>
                <select name="categoryId" class="form-control mr-3" id="categoryId">
                    <option value="">Wszystkie kategorie</option>
                    @foreach (var category in ViewBag.Categories as SelectList)
                    {
                        <option value="@category.Value" selected="@(ViewData["CurrentCategoryId"] != null && ViewData["CurrentCategoryId"].ToString() == category.Value ? "selected" : "")">
                            @category.Text
                        </option>
                    }
                </select>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group mb-2">
                <label for="sortOrder" class="mr-2">Sortuj po:</label>
                <select name="sortOrder" class="form-control mr-3" id="sortOrder">
                    <option value="Name" selected="@(ViewData["CurrentSortOrder"] as string == "Name" ? "selected" : "")">Nazwa</option>
                    <option value="Price" selected="@(ViewData["CurrentSortOrder"] as string == "Price" ? "selected" : "")">Cena</option>
                    <option value="OfferEndDateTime" selected="@(ViewData["CurrentSortOrder"] as string == "OfferEndDateTime" ? "selected" : "")">Czas zakończenia</option>
                </select>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-2">
                <label for="sortDirection" class="mr-2">Kierunek sortowania:</label>
                <select name="sortDirection" class="form-control mr-3" id="sortDirection">
                    <option value="ascending" selected="@(ViewData["CurrentSortDirection"] as string == "ascending" ? "selected" : "")">Rosnąco</option>
                    <option value="descending" selected="@(ViewData["CurrentSortDirection"] as string == "descending" ? "selected" : "")">Malejąco</option>
                </select>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group mb-2">
                <input type="submit" value="Filtruj" class="btn btn-outline-secondary mt-3 mb-3" />
            </div>
        </div>
    </div>
</form>

<div class="form-group form-check-inline">
    <label class="form-check-label mr-3">Wyświetlanie:</label>
    <div class="form-check form-check-inline">
        <input type="radio" id="listView" name="displayMode" value="list" class="form-check-input" checked>
        <label for="listView" class="form-check-label">Lista</label>
    </div>
    <div class="form-check form-check-inline">
        <input type="radio" id="tileView" name="displayMode" value="tile" class="form-check-input">
        <label for="tileView" class="form-check-label">Kafelki</label>
    </div>
</div>

<div class="row" id="tileViewContainer" style="display: none;">
    @for (int i = 0; i < Model.Count(); i += 3)
    {
        <div class="row">
            @foreach (var offer in Model.Skip(i).Take(3))
            {
                <div class="col-md-4 mb-3">
                    <div class="card shadow-sm h-100">
                        <div class="card-body d-flex flex-column">
                            <img src="~/@offer.ImagePath" class="img-fluid" />
                            <h5 class="card-title">@offer.LEGOSet.Name</h5>
                            <p class="card-text">@offer.LEGOSet.SetId</p>
                            <p class="card-text">Cena: @offer.Price.ToString("C")</p>
                            <p class="card-text">Data zakończenia: @offer.OfferEndDateTime.ToString("dd/MM/yyyy")</p>
                            <div class="mt-auto d-flex justify-content-between align-items-center">
                                <div class="btn-group">
                                    <a href="@Url.Action("Details", "Offers", new { id = offer.OfferId })" class="btn btn-sm btn-outline-dark">Zobacz więcej</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Zdjęcie
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LEGOSet.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LEGOSet.SetId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OfferEndDateTime)
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src="~/@item.ImagePath" class="img-fluid" style="max-height: 150px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LEGOSet.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LEGOSet.SetId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OfferEndDateTime)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.OfferId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.OfferId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.OfferId })
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    document.querySelectorAll('input[name="displayMode"]').forEach(function (el) {
        el.addEventListener('change', function () {
            if (this.value === "tile") {
                // Pokaż widok kafelków
                document.getElementById('tileViewContainer').style.display = 'block';
                // Ukryj widok listy
                document.querySelector('.table').style.display = 'none';
            } else {
                // Pokaż widok listy
                document.querySelector('.table').style.display = 'table';
                // Ukryj widok kafelków
                document.getElementById('tileViewContainer').style.display = 'none';
            }
        });
    });
</script>

